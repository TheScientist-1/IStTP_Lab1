@*@model IEnumerable<GalleryWebApplication.Author>*@
@model GalleryWebApplication.Models.GalleryViewModels.InstructorIndexData

@{
    ViewData["Title"] = "Authors";
}

<h1>Authors</h1>

<p>
    <a asp-action="Create">Create new Author</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th> Name</th>
            <th>Contacts</th>

            <th>Products</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Authors)
        {
        string selectedRow = "";
            if (item.Id == (int?)ViewData["AuthorId"])
            {
                selectedRow = "table-success";
            }
            <tr class="@selectedRow">
            
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Contacts)
            </td>
                <td>
                    @foreach (var prod in item.AuthorsProducts)
                    {
                                <a href="@Url.Action("Details", "Products", new { id = @prod.Product.Id })">@prod.Product.Name</a> <br />

                    }
                    </td>
            <td>
                    <a asp-action="Index" asp-route-id="@item.Id">Select</a> |
                    @if (User.IsInRole("admin"))
                    {
                                <a asp-action="Edit" asp-route-id="@item.Id">Edit</a>
                    }
                    <a asp-action="Details" asp-route-id="@item.Id">Artworks</a> |
                    @if (User.IsInRole("admin"))
                    {
                                 <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                    }
            </td>
        </tr>
}
    </tbody>
</table>
@if (Model.Products != null)
{
        <h3>Products created by selected author</h3>
        <table class="table">
            <tr>
                <th>Name</th>
                <th>Category</th>
                    <th>Price</th>
                    <th>Information</th>

            </tr>

        @foreach (var item in Model.Products)
        {
            string selectedRow = "";
            if (item.Id == (int?)ViewData["ProductId"])
            {
                selectedRow = "success";
            }
                    <tr class="@selectedRow">
                        @*<td>
                    @Html.ActionLink("Select", "Index", new { productId = item.Id })
                        </td>*@
                       @* <td>
                    @item.Id
                        </td>*@
                        <td>
                    @item.Name
                        </td>
                        <td>
                    @item.Category.Name
                        </td>
                                <td>
                    @item.Price
                                </td>
                                        <td>
                    @item.Info
                                </td>
                    </tr>
        }

        </table>
}

<div class="container">
    <div id="chart1"></div>
    <div id="chart2"></div>
</div>

@section scripts{
        <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
        <script type="text/javascript">
            google.charts.load('current', { 'packages': ['bar'] });
            google.charts.setOnLoadCallback(drawChart1);

            function drawChart1() {
                $.get('/api/Chart/AuthorProducts', function (authorData) {
                    var data = new google.visualization.arrayToDataTable(authorData);
                    var formatter = new google.visualization.NumberFormat({ prefix: '$' });
                    formatter.format(data, 1);
                    var options = {
                        chart: {
                            title: 'Author',
                            subtitle: 'Number of artworks'
                        },
                        bars: 'horizontal'
                    };
                    var chart = new google.charts.Bar(document.getElementById('chart1'));
                    chart.draw(data, google.charts.Bar.convertOptions(options));
                });
            }

            google.charts.load('current', {'packages':['corechart']});
            google.charts.setOnLoadCallback(drawChart2);

            function drawChart2() {
                $.get('/api/Chart/AuthorProductsLineChart', function(chartData) {
                    var data = google.visualization.arrayToDataTable(chartData);

                    var options = {
                        title: 'Author Products',
                        curveType: 'function',
                        legend: { position: 'bottom' }
                    };

                    var chart = new google.visualization.LineChart(document.getElementById('chart2'));

                    chart.draw(data, options);
                });
            }
        </script>
}
